kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "devops-in-a-box.fullname" . }}
  labels:
    app.kubernetes.io/component: fluentd
{{ include "devops-in-a-box.labels" . | indent 4 }}
data:

  fluentd-loglevel: {{ .Values.forwarding.fluentd.loglevel | squote }}
  td-agent.conf: |

    <system>
      log_level "#{ENV['LOG_LEVEL'] }"
    </system>

    <source>
      @type  forward
      @id    input1
      port  24224
{{ if .Values.forwarding.fluentd.ssl }}
      <transport tls>
        ca_path /secret/fluentd/ca-bundle.crt
        cert_path /secret/fluentd/tls.crt
        private_key_path /secret/fluentd/tls.key
        private_key_passphrase "#{ENV['FLUENTD_SSL_PASSPHRASE'] }"
      </transport>
{{ end }}
      <security>
        shared_key "#{ENV['SHARED_KEY'] }"
        self_hostname "#{ENV['HOSTNAME']}"
      </security>
    </source>

    <match kubernetes.**>
      @type rewrite_tag_filter
      <rule>
        key $['kubernetes']['labels']['perficient_com/runtime']
        pattern /spring-boot/
        tag spring-boot
      </rule>
    </match>

    <filter spring-boot>
      @type parser
      <parse>
        @type json
        json_parser json
      </parse>
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      key_name message
      reserve_data true
    </filter>

    <match retry_elasticsearch>
      @type copy
      <store>
        @type elasticsearch
        @id retry_elasticsearch
        with_transporter_log true
        @log_level debug
        host {{ template "devops-in-a-box.fullname" . }}-es-http
        port 9200
        verify_es_version_at_startup false
        scheme https
        ssl_version TLSv1_2
        user elastic
        password "#{ENV['ELASTICSEARCH_PASSWORD']}"
        ca_file '/secret/elasticsearch/elasticsearch-ca.crt'
        logstash_format true
        logstash_prefix springboot
        type_name _doc
        write_operation create
        id_key viaq_msg_id
        # https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
        sniffer_class_name "#{ENV['ES_SNIFFER_CLASS_NAME'] || 'Fluent::Plugin::ElasticsearchSimpleSniffer'}"
        reload_connections "#{ENV['ES_RELOAD_CONNECTIONS'] || 'true'}"
        # https://github.com/uken/fluent-plugin-elasticsearch#reload-after
        reload_after "#{ENV['ES_RELOAD_AFTER'] || '200'}"
        # https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
        reload_on_failure false
        # 2 ^ 31
        request_timeout 2147483648
        <buffer>
          @type file
          path '/var/log/fluentd/retry_elasticsearch'
          flush_interval "#{ENV['ES_FLUSH_INTERVAL'] || '1s'}"
          flush_thread_count "#{ENV['ES_FLUSH_THREAD_COUNT'] || 2}"
          flush_at_shutdown "#{ENV['FLUSH_AT_SHUTDOWN'] || 'false'}"
          retry_max_interval "#{ENV['ES_RETRY_WAIT'] || '300'}"
          retry_forever true
          queued_chunks_limit_size "#{ENV['BUFFER_QUEUE_LIMIT'] || '32' }"
          chunk_limit_size "#{ENV['BUFFER_SIZE_LIMIT'] || '8m' }"
          total_limit_size "#{ENV['TOTAL_LIMIT_SIZE'] ||  8589934592 }" #8G
          overflow_action "#{ENV['BUFFER_QUEUE_FULL_ACTION'] || 'block'}"
        </buffer>
      </store>
    </match>

    <match spring-boot>
      @type copy
      <store>
        @type elasticsearch
        @id elasticsearch
        with_transporter_log true
        @log_level debug
        host {{ template "devops-in-a-box.fullname" . }}-es-http
        port 9200
        verify_es_version_at_startup false
        scheme https
        ssl_version TLSv1_2
        user elastic
        password "#{ENV['ELASTICSEARCH_PASSWORD']}"
        ca_file '/secret/elasticsearch/elasticsearch-ca.crt'
        logstash_format true
        logstash_prefix springboot
        type_name _doc
        retry_tag retry_elasticsearch
        write_operation create
        id_key viaq_msg_id
        # https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
        sniffer_class_name "#{ENV['ES_SNIFFER_CLASS_NAME'] || 'Fluent::Plugin::ElasticsearchSimpleSniffer'}"
        reload_connections "#{ENV['ES_RELOAD_CONNECTIONS'] || 'true'}"
        # https://github.com/uken/fluent-plugin-elasticsearch#reload-after
        reload_after "#{ENV['ES_RELOAD_AFTER'] || '200'}"
        # https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
        reload_on_failure false
        # 2 ^ 31
        request_timeout 2147483648
        <buffer>
          @type file
          path '/var/log/fluentd/elasticsearch'
          flush_interval "#{ENV['ES_FLUSH_INTERVAL'] || '1s'}"
          flush_thread_count "#{ENV['ES_FLUSH_THREAD_COUNT'] || 2}"
          flush_at_shutdown "#{ENV['FLUSH_AT_SHUTDOWN'] || 'false'}"
          retry_max_interval "#{ENV['ES_RETRY_WAIT'] || '300'}"
          retry_forever true
          queued_chunks_limit_size "#{ENV['BUFFER_QUEUE_LIMIT'] || '32' }"
          chunk_limit_size "#{ENV['BUFFER_SIZE_LIMIT'] || '8m' }"
          total_limit_size "#{ENV['TOTAL_LIMIT_SIZE'] ||  8589934592 }" #8G
          overflow_action "#{ENV['BUFFER_QUEUE_FULL_ACTION'] || 'block'}"
        </buffer>
      </store>
    </match>

    <match **>
      @type null
    </match>

  run.sh: >
    #!/bin/bash


    export MERGE_JSON_LOG=${MERGE_JSON_LOG:-false}

    CFG_DIR=/etc/fluent/configs.d

    ENABLE_PROMETHEUS_ENDPOINT=${ENABLE_PROMETHEUS_ENDPOINT:-"true"}

    OCP_OPERATIONS_PROJECTS=${OCP_OPERATIONS_PROJECTS:-"default openshift
    openshift- kube-"}


    fluentdargs="--no-supervisor"

    # find the sniffer class file

    sniffer=$( gem contents fluent-plugin-elasticsearch|grep
    elasticsearch_simple_sniffer.rb )

    if [ -z "$sniffer" ] ; then
        sniffer=$( rpm -ql rubygem-fluent-plugin-elasticsearch|grep elasticsearch_simple_sniffer.rb )
    fi

    if [ -n "$sniffer" -a -f "$sniffer" ] ; then
        fluentdargs="$fluentdargs -r $sniffer"
    fi

    exec fluentd $fluentdargs